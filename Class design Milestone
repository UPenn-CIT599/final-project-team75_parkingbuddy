1) Class and method design: UML diagram

Please click on link below.

http://www.nomnoml.com.s3-website-eu-west-1.amazonaws.com/#view/%5BJPEGReader%7CReads%20in%20the%20photo%20from%20user%20inputted%20folder.%7C%0AArrayList%3CPhoto%3E%20getPhotos(Path%20path)%5D%0A%5BJpegReader%5D--%3E%5BPhoto%5D%0A%0A%5BLicenseOCR%7CCalls%20the%20OpenALPR%20API%20to%20get%20the%20license%20plate%20and%20state%20of%20the%20car%20in%20the%20photo.%7C%0ACar%20getCar(Photo%20photo)%0A%5D%0A%5BLicenseOCR%5D--%3E%5BPhoto%5D%0A%5BLicenseOCR%5D--%3E%5BCar%5D%0A%0A%5BCar%7CCar%20is%20a%20car%20in%20the%20photo.%7C%0AString%20license%0AString%20state%5D%0A%0A%5BPhoto%7CStores%20each%20photo%27s%20data%7C%0AByte%5C%5B%5C%5D%20Data%0ADate%20creationDate%0AString%20hash%5D%0A%0A%5BParkingInstance%7C%0AParking%20Instance%20is%20a%20single%20instance%20that%20a%20car%20is%20parked%20in%20the%20parking%20lot.%7C%0ADate%20date%0ACar%20car%0AString%20photoHash%5D%0A%5BParkingInstance%5D--%3E%5BCar%5D%0A%0A%0A%0A%5BParkingInstanceProcessor%7CRelying%20on%20downstream%20classes%2C%20ParkingInstanceProcessor%20handles%20each%20instance%20of%20cars%20being%20parked%20at%20the%20lot.%20%0AFor%20a%20given%20folder%20with%20all%20the%20photos%20that%20is%20uploaded%2C%20it%20will%20process%20the%20parking%20instance%0Aby%20reading%20the%20photos%2C%20getting%20license%20plates%20and%20creating%20a%20parking%20instance.%7C%0AArrayList%3CParkingInstance%3E%20getParkingInstance(Path%20path)%5D%0A%5BParkingInstanceProcessor%5D-%3E1%5BLicenseOCR%5D%0A%5BParkingInstanceProcessor%5D-%3E1%5BJpegReader%5D%0A%5BParkingInstanceProcessor%5D-%3E%5BParkingInstance%5D%0A%0A%5BParkingInstanceDatabase%7C%0AArrayList%3CParkingInstance%3E%20instances%7C%0AArrayList%3CParkingInstance%3E%20getParkingInstance(QueryType%20query)%0AAppendParkingInstance(ArrayList%3CParkingInstance%3E%20instances)%5D%0A%5BParkingInstanceDatabase%5D-%3En%5BParkingInstance%5D%0A%0A%0A%0A%5BParkingTicket%7C%0AParking%20ticket%20issues%20a%20parking%20ticket%20for%20each%20car%2C%20with%20all%20of%20its%20violations.%7C%0ACar%20car%0AArrayList%3CParkingInstance%3E%20parkingInstances%5D%0A%5BParkingTicket%5D-%3E%5BCar%5D%0A%5BParkingTicket%5D-%3E%5BParkingInstance%5D%0A%0A%5BParkingController%7CBased%20on%20user%20input%20from%20CLI%2C%20starts%20either%20the%20violation%20report%20process%20or%20starts%20logging%20parking%20instances.%7C%0AParkingInstanceProcessor%20instanceProcessor%0AParkingTicketProcessor%20ticketProcessor%0AParkingInstanceDatabase%20database%7C%0AsomeMethods%3A%20methods%20to%20run%20program%5D%0A%5BParkingController%5D-%3E1%5BParkingInstanceProcessor%5D%0A%5BParkingController%5D-%3E1%5BParkingTicketProcessor%5D%0A%5BParkingController%5D-%3E1%5BParkingInstanceDatabase%5D%0A%0A%5BParkingTicketProcessor%7C%0ATakes%20care%20of%20the%20logic%20to%20issue%20a%20violation%20ticket.%20Parking%20rule%20is%20handled%20in%20this%20class.%0A%7C%0AArrayList%3CParkingTicket%3E%20writeTicket(Date%20start%2C%20Date%20end%2C%20ArrayList%3CParkingInstance%3E%20instances%2C%20Path%20path)%0A%5D%0A%0A%5BParkingTicketProcessor%5D--%3E%5BParkingTicket%5D%0A%5BParkingTicketProcessor%5D--%3E%5BParkingInstanceDatabase%5D%0A%5BParkingTicketProcessor%5D-%3E1%5BParkingReportWriter%5D%0A%0A%5BParkingReportWriter%7C%0AHandles%20generating%20the%20parking%20violation%20report%20file%0A%7C%0AArrayList%3CParkingTicket%3E%20parkingTickets%7C%0Avoid%20write(ArrayList%3CParkingTicket%3E%20parkingTickets%2C%20Path%20outputFilePath)%0A%5D%0A%5BParkingReportWriter%5D--%3E%5BParkingTicket%5D%0A%0A%5BCLI%7C%0ACLI%20takes%20in%20user%20inputs%20and%20allows%20user%20to%20indicate%20if%20they%20want%20to%20upload%20photos%20or%20pull%20violation%20report.%0AIt%20also%20allows%20users%20to%20enter%20desired%20date%20range%20for%20violation%20report.%7C%0Astart()%5D%0A%5BCLI%7C%0AParkingController%20controller%5D-%3E1%5BParkingController%5D%0A

2) Non-trivial method:

readDates method: This method extracts the original date of the files from a folder by extracting exif data and storing them in an ArrayList of String.
src > src > main > java > Parking > JPEGReader.java

JUnit test:
src > src > test > java > Parking > JPEGReader.java
JPEGReaderTest.java


